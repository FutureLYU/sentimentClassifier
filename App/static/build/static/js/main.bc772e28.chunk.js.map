{"version":3,"sources":["components/views/HomePage/HomePage.js","components/views/ModelPage/ModelPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/NavBar.js","components/views/OverviewPage/OverviewPage.js","components/views/SamplePage/SamplePage.js","components/App.js","index.js"],"names":["Title","Typography","Paragraph","Link","Text","HomePage","style","height","width","maxWidth","margin","color","level","size","src","process","href","target","LinkedinOutlined","fontSize","GithubOutlined","TrophyFilled","TextArea","Input","ModelPage","useState","textcontext","setcontext","visible","setVisible","confirmLoading","setConfirmLoading","prediction","setprediction","proba","setproba","submitloading","setsubmitloading","updateloading","setupdateloading","info","s","message","rows","value","onChange","event","showCount","title","onCancel","footer","type","loading","onClick","axios","post","review","sentiment","then","response","data","success","catch","e","console","log","marginTop","get","params","result","probability","msg","float","LeftMenu","props","mode","Item","NavBar","className","position","zIndex","placement","closable","onClose","OverviewPage","code","SamplePage","copyable","App","fallback","paddingTop","minHeight","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc772e28.chunk.js","sourcesContent":["import React from 'react'\nimport { Typography, Divider, Popover, Avatar } from 'antd';\nimport {TrophyFilled, LinkedinOutlined, GithubOutlined, ContactsOutlined} from \"@ant-design/icons\";\nconst { Title, Paragraph, Text, Link } = Typography;\n\n\nfunction HomePage() {\n    return (\n        <div style = {{height : \"100%\", width : \"70%\", maxWidth : \"60rem\",\n            margin: \"10rem auto\", color : \"blue\"}}>\n            <Typography>\n                <Title level={2}>\n                    Hanxi Lyu\n                </Title>\n                <br/><br/><br/>\n                <Avatar size={150} src={process.env.PUBLIC_URL+\"/ava.jpg\"} />\n                <br/><br/><br/>\n                <Paragraph>\n                A graduate student at University of Southern California,\n                 pursuing a Master's degree in Analytics in the school of Viterbi Engineering (Aug 2019 - May 2021). \n                 \n                Solid engineer with 3 years of project experience in various fields,\n                 including machine learning and web development. Strong knowledge and programming skills in Java, Python,\n                  SQL, and JavaScript. Familiar with popular frameworks (TensorFlow, Java Spring, React, Flask, etc.)\n                   and cloud platforms including Google Cloud, AWS.\n                   <br/> \n                   <br/>  \n                   <div>\n                    {/* <Popover content={<Text>hanxilyu@gmail.com</Text>} title=\"email\" trigger=\"click\">\n                    <ContactsOutlined style={{fontSize:\"25px\"}}/>\n                    </Popover> */}\n                    <Link href=\"https://www.linkedin.com/in/hanxi-lyu-200602193/\" target=\"_blank\"><LinkedinOutlined style={{fontSize:\"25px\" ,margin:\"10px\"}}/></Link>\n                    <Link href=\"https://github.com/FutureLYU\" target=\"_blank\"><GithubOutlined style={{fontSize:\"25px\"}}/></Link>\n                   </div>\n                                                                                                \n                </Paragraph>\n                <Divider/>\n                <Title level = {3}>\n                    Education\n                </Title>\n                <Paragraph>\n                    <li>University of Southern California, Master of Science in Analytics, GPA: 4.0/4.0, Aug 2019 - May 2021</li>\n                    <br/>\n                    <li>Dalian Maritime University, Bachelor of Science in Statistics, GPA: 87/100, Sep 2015 - Jul 2019</li>\n                </Paragraph>\n                <Divider/>\n                <Title level = {3}>\n                    Experience\n                </Title>\n                <Paragraph>\n                    <li>Software Engineer Intern, Parallel Agile Inc. - Los Angeles, CA, Jan 2021 - Apr 2021</li>\n                </Paragraph>\n                <Divider/>\n                <Title level = {3}>\n                    Data Science Competition <Link href = \"https://www.kaggle.com/futurelyu\" target = \"_blank\"><TrophyFilled /></Link>\n                </Title>\n                <Paragraph>\n                    <li>Kaggle CV competition: Deepfake Detection Challenge (Silver Medal), Feb 2020 - Mar 2020</li>\n                    <br/>\n                    <li>Kaggle ML competition: NFL Big Data Bowl (Bronze Metal), Oct 2019 – Dec 2019</li>\n                </Paragraph>\n                \n            </Typography>\n            <br/><br/><br/><br/><br/><br/>\n        </div>\n    )\n}\n\nexport default HomePage","import React, {useState} from 'react';\nimport { Input, Button, Modal, message, Divider} from 'antd';\nimport axios from 'axios';\nconst { TextArea } = Input;\n\nfunction ModelPage() {\n\n    const initalexample = \"Enter your review comment here.\"\n    \n    const [textcontext, setcontext] = useState(initalexample);\n    const [visible, setVisible] = useState(false);\n    const [confirmLoading, setConfirmLoading] = useState(false);\n    const [prediction, setprediction] = useState(\"unknown\");\n    const [proba, setproba] = useState(0);\n    const [submitloading, setsubmitloading] = useState(false);\n    const [updateloading, setupdateloading] = useState(false);\n    const info = (s) => {\n        message.info(s);\n      };\n\n    const handleSubmit = () => {\n        setsubmitloading(true);\n        axios.get('/api/predict', {\n            params: {\n              data : textcontext\n            }\n          }).then((response) => {\n            if (response.data.success) {\n                console.log(response);\n                setsubmitloading(false);\n                setprediction(response.data.result.prediction);\n                setproba(response.data.result.probability);\n                setVisible(true);    \n            }\n            else {\n                info(response.data.msg);\n            }\n        }).catch((e) => {\n            console.log(e);\n        })\n    }\n\n    const handleChange = (event) => {\n        setcontext(event.target.value);\n    }\n\n    const handleCorrect = () => {\n        setConfirmLoading(true);\n        axios.post('/api/review', \n            {\n                review : textcontext,\n                sentiment : prediction === \"positive\" ? 1 : 0 \n            }\n        ).then((response) => {\n            if (response.data.success) {\n                setVisible(false);\n                setConfirmLoading(false);\n                info(\"new review saved\");\n            }\n            else {\n                setVisible(false);\n                setConfirmLoading(false);\n                info(\"fail to save this review\");\n            }\n        }).catch((e) => {\n            console.log(e);\n        })\n      };\n    \n      const handleWrong = () => {\n        setConfirmLoading(true);\n        axios.post('/api/review', \n            {\n                review : textcontext,\n                sentiment : prediction === \"positive\" ? 0 : 1 \n            }\n        ).then((response) => {\n            if (response.data.success) {\n                setVisible(false);\n                setConfirmLoading(false);\n                info(\"new review saved\");\n            }\n            else {\n                setVisible(false);\n                setConfirmLoading(false);\n                info(\"fail to save this review\");\n            }\n        }).catch((e) => {\n            console.log(e);\n        })\n      };\n\n      const handleCancel = () => {\n          setConfirmLoading(false);\n          setVisible(false);\n      }\n\n      const handleUpdate = () => {\n          setupdateloading(true);\n          axios.get('/api/update').then((response) => {\n            info(response.data.msg);\n            setupdateloading(false);\n          }).catch((e) => {\n              console.log(e);\n          })\n      }\n\n    return (\n        <div style = {{height : \"100%\", width : \"70%\", maxWidth : \"40rem\",\n            margin: \"10rem auto\"}}>\n            <TextArea rows={10} value={textcontext} onChange={handleChange} showCount = {true}/>\n            <Modal\n                title=\"Movie Review Sentiment Classifier\"\n                visible={visible}\n                confirmLoading={confirmLoading}\n                onCancel={handleCancel}\n                footer={[\n                    <Button key=\"wrong\" type = \"danger\" loading={confirmLoading} onClick={handleWrong}>\n                      wrong\n                    </Button>,\n                    <Button key=\"correct\" type=\"primary\" loading={confirmLoading} onClick={handleCorrect}>\n                      correct\n                    </Button>,\n                  ]}\n            >\n                <p>prediction : {prediction}</p>\n                <p>probability : {proba}</p>\n            </Modal>\n            <div style = {{marginTop : \"3rem\"}}>\n                <Button size=\"large\" type = \"primary\" loading={submitloading} onClick = {handleSubmit}>predict</Button>\n                <Button size=\"large\" type = \"default\" loading={updateloading} style = {{float : \"right\"}} onClick = {handleUpdate}>update</Button>\n            </div>\n            <Divider/>\n            <p>Tips: The predict button is used to submit a user's review and get prediction and probability.</p>\n            <p>Tips: The update button is used to update the model with all the new data submitted by the users.</p>\n        </div>\n    )\n}\n\nexport default ModelPage;\n","import React from 'react';\nimport { Menu } from 'antd';\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"overview\">\n        <a href=\"/overview\">overview</a>\n      </Menu.Item>\n      <Menu.Item key=\"sample submission\">\n        <a href=\"/sample\">sample submission</a>\n      </Menu.Item>\n      <Menu.Item key=\"submit\">\n        <a href=\"/model\">submit</a>\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default LeftMenu","import React, { useState } from \"react\";\nimport LeftMenu from \"./Sections/LeftMenu\";\nimport { Drawer, Button} from \"antd\";\nimport \"./Sections/NavBar.css\";\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false);\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <nav\n      className=\"menu\"\n      style={{ position: \"fixed\", zIndex: 5, width: \"100%\" }}\n    >\n      <div className=\"menu__logo\">\n        <a href=\"/\">Homepage</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          Menu\n        </Button>\n        <Drawer\n          title=\"Guide\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          \n        </Drawer>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;","import React from 'react'\nimport { Typography, Divider } from 'antd';\nconst { Title, Paragraph, Text, Link } = Typography;\nfunction OverviewPage() {\n    return (\n        <div style = {{height : \"100%\", width : \"70%\", maxWidth : \"60rem\",\n            margin: \"10rem auto\", color : \"blue\"}}>\n            <Typography>\n                <Title>Movie Review Sentiment Classifier</Title>\n                <Title level={4}>Author : Hanxi Lyu</Title>\n                <Divider/>\n                <Title level={2}>Introduction</Title>\n                <Paragraph>\n                    The project is based on the ISE 590 directed research of University of Southern California.\n                    This is a full-stack website with machine learning model embeded in the Flask backend service. \n                    It can be used to classify whether the sentiment of a movie review is postive or negtive.\n                    The website can collect real time data from the user submission and update the backend model.\n                    The structure of the project is built on <Text code>React</Text> and <Text code>Flask</Text>. \n                    The template of this project can be used to make fast deployment with new machine learning models.\n                    All the codes are public in my <Link href=\"https://github.com/FutureLYU/sentimentClassifier\" target=\"_blank\">github</Link> webiste.\n\n                </Paragraph>\n                \n                <Title level={2}>Guidelines and Resources</Title>\n                <Paragraph>\n                    The topics involved in this project include the following:\n                </Paragraph>\n\n                <Paragraph>\n                <ul>\n                    <li>\n                    Cleaning and preparing text data\n                    </li>\n                    <li>\n                    Building feature vectors from text documents\n                    </li>\n                    <li>\n                    Training a machine learning model to classify positive and negative movie reviews\n                    </li>\n                    <li>\n                        build front end features with react and antd\n                    </li>\n                    <li>\n                        build backend service with Flask\n                    </li>\n                    <li>\n                        deploy the whole website to public web server\n                    </li>\n                </ul>\n                </Paragraph>\n\n                <Paragraph>\n                    We use the tokenizer from <Text code>NLTK</Text> to split text document and \n                    transfer it into vector features by <Text code>HashingVectorizer</Text> from <Text code>scikit-learn</Text>.\n                    For model part, we use <Text code>SGDClassifier</Text> to implement online training. \n                    The Flask backend service is composed by database models, routers and ML service. \n                    And sqlite is chose as the backend database because of its convinience. \n                    For front end part, <Text code>antd</Text> and <Text code>axios</Text> are used to handle http request and UI. \n                    After finishing all the tasks above, the website is deployed on pythonanywhere.\n\n                </Paragraph>\n                <Paragraph>\n                    <Link href=\"./model\">have a try now</Link>\n                </Paragraph>\n                <Title level={2}>Data preprocessing</Title>\n                <Paragraph>\n                    The movie review dataset can be downloaded from http://ai.stanford.edu/~amaas/data/sentiment/.\n                    Then we remove all of the HTML markup from the movie reviews by regular expression. \n                    After we removed the HTML markup, \n                    we used a slightly more complex regex to find emoticons, which we temporarily stored as emoticons. \n                    Next, we removed all non-word characters from the text via the regex <Text code>[\\W]+</Text> and converted the text into lowercase characters.\n                    Using the PorterStemmer from the <Text code>NLTK</Text> package, \n                    we modified our tokenizer function to reduce words to their root form, \n                    which was illustrated by the simple preceding example where the word 'running' was stemmed to its root form 'run'.\n                    In order to remove stop-words from the movie reviews, \n                    we will use the stop words set from the NLTK library, which can be obtained by calling the nltk.download function.\n                    So we have done all the preprocessing work so far.\n                </Paragraph>\n\n\n                <Title level={2}>Feature engineering</Title>\n                <Paragraph>\n                Before we train a online ML model, we need to convert the collection of text documents to a matrix of token occurrences.\n                Since <Text code>CountVectorizer</Text> and <Text code>TfidfVectorizer</Text> requires holding the complete vocabulary in memory. \n                The vectorizer we used here for feature engineering is <Text code>HashingVectorizer</Text> from <Text code>scikit-learn</Text>. \n                HashingVectorizer is data-independent and makes use of the hashing trick via the 32-bit MurmurHash3 function by Austin Appleby.\n                </Paragraph>\n                \n                <div><Text code>... from sklearn.feature_extraction.text import HashingVectorizer</Text></div>\n                <div><Text code>... from sklearn.linear_model import SGDClassifier</Text></div>\n                <div><Text code>... vect = HashingVectorizer(decode_error='ignore',</Text></div>\n                <div><Text code>...                          n_features=2**21,</Text></div>\n                <div><Text code>...                          preprocessor=None,</Text></div>\n                <div><Text code>...                          tokenizer=tokenizer)</Text></div>\n                    \n                \n                \n                <Title level={2}>Model training</Title>\n                <Paragraph>\n                    To implement a online algorithm, we will use of the partial_fit function of the <Text code>SGDClassifier</Text> \n                    in scikit-learn to stream the documents directly from our local drive, \n                    and train a logistic regression model using small mini-batches of documents.\n                    we initialized HashingVectorizer with our tokenizer function and set the number of features to 2**21. \n                    Furthermore, we reinitialized a logistic regression classifier by setting the loss parameter \n                    of the SGDClassifier to 'log'—note that by choosing a large number of features in the HashingVectorizer, \n                    we reduce the chance of causing hash collisions, but we also increase the number of coefficients in \n                    our logistic regression model. Having set up all the complementary functions, \n                    we can now start our training. Finally, the accuracy of the model is approximately 88 percent.\n                </Paragraph>\n\n                <Title level={2}>Web development</Title>\n                <Paragraph>\n                    <Text code>React</Text> is a declarative, efficient, and flexible JavaScript library for building user interfaces. \n                    It lets you compose complex UIs from small and isolated pieces of code called “components”.\n                    Flask is a lightweight WSGI web application framework. \n                    It is designed to make getting started quick and easy, with the ability to scale up to complex applications. \n                    It began as a simple wrapper around Werkzeug and Jinja and has become one of the most popular Python web application frameworks.\n                    There are several ways to create a combined project with React and Flask. \n                    I start from the frontend because the project structure is more complex than the backend. \n                    For this project I used the create-react-app generator to create a simple React project.\n                    <Text code>antd</Text> and <Text code>axios</Text> are used to handle http request and UI.\n                    The Flask backend service is composed by database models, routers and ML service. \n                    And sqlite is chose as the backend database because of its convinience. \n                    After finishing all the tasks above, the website is deployed on pythonanywhere.\n                </Paragraph>\n\n            </Typography>\n            <br/><br/><br/><br/>\n        </div>\n    )\n}\n\nexport default OverviewPage\n","import React from 'react'\nimport {Divider, Typography} from 'antd'\nconst {Paragraph, Title} = Typography\n\n\nfunction SamplePage() {\n    return (\n        <div style = {{height : \"100%\", width : \"70%\", maxWidth : \"60rem\",\n            margin: \"10rem auto\", color : \"blue\"}}>\n            \n            <Typography>\n                <Title level = {2}>IRON MAN 2008</Title>\n                <Paragraph copyable>\n                    What gives this its distinction is Robert Downey Jr, who is terrific.\n                </Paragraph>\n                <Divider/>\n                <Title level = {2}>DUMBO 2019</Title>\n                <Paragraph copyable>\n                It sputters through its first act, jolts us through its last and, worst of all, \n                reveals Dumbo's special ability too early, leaving little to the imagination and no reprieve from the nagging horrors of reality.\n                </Paragraph>\n                <Divider/>\n                <Title level = {2}>THE DARK KNIGHT 2008</Title>\n                <Paragraph copyable>\n                This may seem like faint praise, \n                but about the highest compliment I can give Christopher Nolan's The Dark Knight right now\n                 is to say that there were many long stretches during which I didn't even realize it was a superhero movie.\n                </Paragraph>\n                <Divider/>\n                <br/><br/><br/><br/><br/><br/>\n            </Typography>   \n        </div>\n    )\n}\n\nexport default SamplePage\n","import './App.css';\nimport React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./views/HomePage/HomePage\"\nimport ModelPage from \"./views/ModelPage/ModelPage\"\nimport NavBar from \"./views/NavBar/NavBar\"\nimport OverviewPage from \"./views/OverviewPage/OverviewPage\"\nimport SamplePage from \"./views/SamplePage/SamplePage\"\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n    <NavBar />\n    <div style={{ paddingTop: \"75px\", minHeight: \"calc(100vh - 80px)\" }}>\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/model\" component={ModelPage} />\n        <Route exact path=\"/overview\" component={OverviewPage}/>\n        <Route exact path=\"/sample\" component={SamplePage}/>\n      </Switch>\n    </div>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}